<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
    <display-name>Mule</display-name>
    <description>Mule Web App Samples</description>

    <!-- Classpath within the servlet context.  Mule will attempt to load config
         files from here first, and then from the remaining classpath. -->
    <context-param>
        <param-name>org.mule.webapp.classpath</param-name>
        <param-value>/WEB-INF/classes</param-value>
    </context-param>

    <context-param>
        <!-- If using the SpringContextLoaderListener, use this param name -->
        <!--<param-name>contextConfigLocation</param-name>-->
	<!-- uncomment jmx-config.xml below if including mx4j jars -->
        <param-name>org.mule.config</param-name>
<!--           jmx-config.xml, -->
        <param-value>
            metc-config.xml
        </param-value>
    </context-param>

<!--    <listener>-->
<!--        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
<!--    </listener>-->

    <!--
    To use a MuleXml configuration file use this context listener
    -->
    <listener>
        <listener-class>org.mule.config.builders.MuleXmlBuilderContextListener</listener-class>
    </listener>

    <!--servlet-mapping>
        <servlet-name>muleRESTServlet</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping-->

    <!--servlet>
        <servlet-name>muleServlet</servlet-name>
        <servlet-class>org.mule.providers.http.servlet.MuleReceiverServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet-->

    <!--servlet-mapping>
        <servlet-name>muleServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping-->

    <listener>
        <listener-class>org.mitre.metc.SessionFactoryInitializer</listener-class>
    </listener>

    <servlet>
        <servlet-name>listServlet</servlet-name>
        <servlet-class>org.mitre.mule.servlet.ListServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>SamServlet</servlet-name>
        <servlet-class>org.mitre.mule.servlet.SamServlet</servlet-class>
	<init-param>
		<param-name>outputDirectory</param-name>
		<param-value>C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/sam</param-value>
	</init-param>
	<init-param>
		<param-name>outputURI</param-name>
		<param-value>http://vm1-mm154718.mitre.org/sam/</param-value>
	</init-param>
	<init-param>
		<param-name>imageWebRoot</param-name>
		<param-value>C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/images</param-value>
	</init-param>

    </servlet>

    <servlet-mapping>
        <servlet-name>SamServlet</servlet-name>
        <url-pattern>/sam/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>listServlet</servlet-name>
        <url-pattern>/list/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>Groovy</servlet-name>
        <servlet-class>groovy.servlet.GroovyServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>Groovy</servlet-name>
        <url-pattern>*.groovy</url-pattern>
        <url-pattern>*.gsp</url-pattern>
    </servlet-mapping>

  <!-- Define reference to the user database for looking up roles -->
  <resource-env-ref>
    <description>
      Link to the UserDatabase instance from which we request lists of
      defined role names.  Typically, this will be connected to the global
      user database with a ResourceLink element in server.xml or the context
      configuration file for the Manager web application.
    </description>
    <resource-env-ref-name>users</resource-env-ref-name>
    <resource-env-ref-type>
      org.apache.catalina.UserDatabase
    </resource-env-ref-type>
  </resource-env-ref>

  <!-- Define a Security Constraint on this Application -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>REACT Manager command</web-resource-name>
      <url-pattern>/manager/*</url-pattern>
      <url-pattern>/scripts/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
       <!-- NOTE:  This role is not present in the default users file -->
       <role-name>reactadmin</role-name>
    </auth-constraint>
  </security-constraint>

  <!-- Define the Login Configuration for this Application -->
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>REACT Manager Application</realm-name>
  </login-config>

  <!-- Security roles referenced by this web application -->
  <security-role>
    <description>
      The role that is required to log in to the Manager Application
    </description>
    <role-name>manager</role-name>
  </security-role>

  <welcome-file-list>
        <welcome-file>index.html</welcome-file>
  </welcome-file-list>

  <!--error-page>
    <error-code>401</error-code>
    <location>/401.jsp</location>
  </error-page-->

</web-app>
